
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.dbs.services.student;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2017-07-02T22:04:05+08:00
 * Generated source version: 3.1.10
 * 
 */

@javax.jws.WebService(
                      serviceName = "StudentServiceImplService",
                      portName = "StudentServiceImplPort",
                      targetNamespace = "http://cxf.student.com/",
                      wsdlLocation = "D:/Workspace/IDEA/webservices/cxf-server/src/main/resources/studentService.wsdl",
                      endpointInterface = "com.dbs.services.student.StudentService")
                      
public class StudentServiceImplPortImpl implements StudentService {

    private static final Logger LOG = Logger.getLogger(StudentServiceImplPortImpl.class.getName());

    /* (non-Javadoc)
     * @see com.dbs.services.student.StudentService#uploadFile(com.dbs.services.student.UploadFile parameters)*
     */
    public com.dbs.services.student.UploadFileResponse uploadFile(UploadFile parameters) {
        LOG.info("Executing operation uploadFile");
        System.out.println(parameters);
        DataHandler dataHandler = parameters.getFileContent();
        InputStream is = null;
        OutputStream os = null;

        try {
            is = dataHandler.getInputStream();
            os = new FileOutputStream(new File("output.wsdl"));

            int length = 0;
            byte[] block = new byte[1024];
            while ((length = is.read(block)) != -1) {
                os.write(block, 0, length);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (is != null) {
                try {
                    is.close();
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
            if (os != null) {
                try {
                    os.close();
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
        }

        return new UploadFileResponse();
    }

    /* (non-Javadoc)
     * @see com.dbs.services.student.StudentService#queryStudentById(com.dbs.services.student.QueryStudentByIdRequest parameters)*
     */
    public com.dbs.services.student.Student queryStudentById(QueryStudentByIdRequest parameters) { 
        LOG.info("Executing operation queryStudentById");
        System.out.println(parameters);
        try {
            com.dbs.services.student.Student _return = new Student();
            _return.setName(parameters.getName());
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.dbs.services.student.StudentService#queryStudentByAddress(com.dbs.services.student.QueryStudentsByAddressRequest parameters)*
     */
    public com.dbs.services.student.ListOfStudent queryStudentByAddress(QueryStudentsByAddressRequest parameters) { 
        LOG.info("Executing operation queryStudentByAddress");
        System.out.println(parameters);
        try {
            List<Student> list = new ArrayList<>();
            list.add(new Student());
            list.add(new Student());
            list.add(new Student());
            com.dbs.services.student.ListOfStudent _return = new ListOfStudent();
            _return.getStudents().addAll(list);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.dbs.services.student.StudentService#queryRolesById(com.dbs.services.student.QueryRolesByIdRequest parameters)*
     */
    public com.dbs.services.student.Role queryRolesById(QueryRolesByIdRequest parameters) { 
        LOG.info("Executing operation queryRolesById");
        System.out.println(parameters);
        try {
            com.dbs.services.student.Role _return = null;
            switch (parameters.getId()){
                case 0:
                    _return = Role.STUDENT;
                    break;
                case 1:
                    _return = Role.TEACHER;
                    break;
                case 2:
                    _return = Role.PRESIDENT;
                    break;
            }
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
